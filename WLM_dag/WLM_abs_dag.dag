#!/usr/bin/env N6822_dag.dag

## TRANSFER STAGED MEASUREMENT SETS

#JOB A transfer.sub
#VARS A src_name="WLM"
#PARENT A CHILD B

## run split_spw.sub to split off the HI or OH spectral windows
## executable:
## - split_spw.sh (runs split_spw.py)
## inputs: 
## - ms_name: file name in input textfile
## - src_config: source and config (prefix on file name from Google drive)
## - timebin_str: number of seconds to average visibilties (config-dependent) 
## - v_sys: systemic velocity of source
## - v_width: velocity width of source
## - rest_freq: rest frequency of spectral line
## output:
## - tarball of measurement sets that have had spectral window split out with '_spw' appended to file name
## JOB B split_spw.sub
## VARS B src_name="WLM" v_sys="-125" v_width="210" rest_freq="1.420406"
## PARENT B CHILD C

## place all split-out measurement sets on same spectral axis & reference frame
## executable:
## - ms_transform.sh (runs ms_transform.py)
## inputs:
## - ms_name: file name in textfile
## - ref_frame: output reference frame (e.g., 'LSRK' or 'BARY')
## - chan_width: channel width in units of Hz
## - src_name: source name
## output:
## - tarball of measurement sets that have been transformed to the user provided reference frame and spectral channel width
#JOB C ms_transform.sub
#VARS C ref_frame="LSRK" chan_width="1953.71094083786" src_name="WLM"
#PARENT C CHILD D

## untar measurement sets from input textfile
## executable: 
## - untar_measurement_sets.sh
### arguments:
## - ms_name: file name in input text file
## - src_name: source name
## output:
## - untarred measurement set
#JOB D untar_measurement_sets.sub
#VARS D src_name="WLM" 
#PARENT D CHILD E

## GENERATE INPUT  FOR SPLIT CONCAT STEP
## call generate_split_file.py to generate input for SPLIT OF CONCAT step
## executable:
## - generate_split_file.sh (runs generate_split_file.py)
## arguments:
## - src_name: source name
## - extension: file extension for measurement sets to be analyzed
## - output: output name for generated csv file
## output:
## - a csv file that has three columns: name of measurement set, starting channel to split, ending channel to split for concat
## JOB E generate_split_file.sub
## VARS E src_name="WLM" extension="transformed" output_name="split_concat_list"
## PARENT E CHILD F 

## SPLIT FOR CONCAT
## split out channels from measurement sets with more than minumum number of total channels
## to ensure all measurement sets have same number of channels for concat step (runs in staging area)
## executable:
## - split_channels_concat.sh (runs split_channels.py)
## arguments:
## - ms_name - full path to measurement set (input text file)
## - start_chan - starting channel to split (input text file)
## - end_chan - ending channel to split (input text file)
## output:
## - split out measurement sets with equal number of channels so concat step will combine into a single spw
## JOB F split_channels_concat.sub
## VARS F src_name="WLM"
## PARENT F CHILD G

## concatenate (combine) measurement sets from all VLA configurations
## executable:
## - concat.sh (runs concat.py)
## arguments:
## - outfile_name: name of concatenated measurement set
## - extension: file extension to use for concatenation
## - src_name: source name
## output:
## - tarball of concatenated measurement set (combines VLA configurations A+B)
JOB G concat.sub
VARS G src_name="WLM" extension="split_concat" outfile_name="WLM_A+B+C.ms"
PARENT G CHILD H

## re-weight visibilities based on root mean square noise in emission-free regions. Use systemic velocity and velocity width to mask channels with expected emission. 
## executable:
## - statwt.sh (runs statwt.py)
## arguments:
## - ms_name: file name of concatenated measurement set
## - v_sys: systemic velocity of source
## - v_width: velocity width of source
## - src_name: source name
## output:
## - re-weighted concatenated measurement sets with '.wt' appended to name
JOB H statwt.sub
VARS H ms_name="WLM_A+B+C.ms" v_sys="-125" v_width="210" src_name="WLM"
PARENT H CHILD I

## run tclean to get cubelets centered on each background source
## executable:
## - abs_cubelet.sh (runs abs_cubelet.py)
## inputs:
## - RA: Right Acension string from textfile (e.g., 00h40m13.8)
## - Dec: Declination string form textfile (e.g., +40d50m04.73)
## - ms_name: concatenated measurement set
## - start_velocity: starting LSRK velocity (km/s)
## - chan_nums: number of output channels
## - field_id: field ID for source
## - src_name: source name
## - output:
## - tarball of 2D cubelets for each source
JOB I abs_cubelet.sub
VARS I ms_name="WLM_A+B+C.ms.wt" start_velocity="-200" chan_nums="750" src_name="WLM"
